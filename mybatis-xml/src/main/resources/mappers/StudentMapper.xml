<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soft1851.spring.mybatis.mapper.StudentMapper">
<!--    增加-->
    <insert id="insert" parameterType="Student" useGeneratedKeys="true" keyProperty="studentId">
        INSERT INTO t_student (clazz_id, student_name, hometown, birthday)
        VALUES (#{clazzId},#{studentName},#{hometown},#{birthday})
    </insert>
<!--删-->
    <delete id="delete" parameterType="int">
        DELETE
        FROM t_student
        WHERE student_id = #{studentId}
    </delete>
<!--    查-->
    <select id="getStudentById" parameterType="int" resultType="Student">
        SELECT *
        FROM t_student
        WHERE student_id = #{studentId}
    </select>
<!--    更新-->
    <update id="update" parameterType="Student">
        UPDATE t_student
        SET student_name = #{studentName},
            hometown     = #{hometown},
            birthday     = #{birthday}
        WHERE student_id = #{studentId}
    </update>

<!--    批量插-->
    <insert id="batchInsert" parameterType="com.soft1851.spring.mybatis.entity.Student">
        INSERT INTO t_student VALUES
        <foreach collection='students' item='item' index='index' separator=','>
            (#{item.studentId}, #{item.clazzId},
             #{item.studentName}, #{item.hometown}, #{item.birthday})
        </foreach>
    </insert>

<!--    批量删除-->
    <delete id="batchDelete" parameterType="int">
        DELETE FROM t_student
        WHERE student_id IN
        <foreach item='item' index='index' collection='idList' open='(' separator=',' close=')'>
            #{item}
        </foreach>
    </delete>

<!--    批量改-->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="students" item="item" index="index" open="" close="" separator=";">
            UPDATE t_student t
                <set>
                    t.student_name= #{item.studentName}
                </set>
            WHERE t.student_id= ${item.studentId}
        </foreach>
    </update>

<!--    也可以这样'%${江苏}%'    -->
    <select id="selectLimit" resultType="Student">
        SELECT student_id , clazz_id , student_name , hometown ,birthday
        FROM t_student
        WHERE clazz_id = ${2} AND hometown like '%江苏%'
    </select>

<!--    <select id="selectLimitByDynamicSql" parameterType="Student" resultType="Student">-->
<!--        SELECT student_id , clazz_id , student_name , hometown , birthday-->
<!--        FROM t_student-->
<!--        <where>-->
<!--            <if test="clazzId != null">-->
<!--                clazz_id = #{clazzId}-->
<!--            </if>-->
<!--            <if test="hometown != null">-->
<!--                AND hometown like "%"#{hometown}"%"-->
<!--            </if>-->
<!--            <if test="studentName != null">-->
<!--                AND student_name like #{studentName}-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->

<!--    <select id="selectLimitByDynamicSql" parameterType="Student" resultType="Student">-->
<!--        SELECT student_id , clazz_id , student_name , hometown , birthday-->
<!--        FROM t_student-->
<!--        WHERE 1 = 1-->
<!--        <choose>-->
<!--            <when test="clazzId != null">-->
<!--                clazz_id = #{clazzId}-->
<!--            </when>-->
<!--            <when test="hometown != null">-->
<!--                AND hometown like "%"#{hometown}"%"-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                AND student_id &gt; ${0}-->
<!--            </otherwise>-->
<!--        </choose>-->
<!--    </select>-->


    <resultMap id="studentMap" type="Student">
        <id column="student_id" property="studentId"/>
        <result column="student_name" property="studentName"/>
        <result column="hometown" property="hometown"/>
        <result column="birthday" property="birthday"/>
        <association property="clazz" javaType="Clazz">
            <id column="clazz_id" property="clazzId"/>
            <result column="clazz_name" property="clazzName"/>
        </association>
    </resultMap>
    <select id="selectAll" resultMap="studentMap">
        SELECT s.student_id , s.student_name , s.hometown , s.birthday , c.clazz_name
        FROM t_student s
        RIGHT JOIN t_clazz c
        on s.clazz_id = c.clazz_id
        ORDER BY s.birthday DESC
    </select>
</mapper>